################################################################################
# This file was generated by Ansible for {{ansible_fqdn}}
# Do NOT modify this file by hand!
################################################################################

{% if item.key == "default" %}
server {
    listen        {{ item.value.listen | default(80) }} default_server;
    listen   [::]:{{ item.value.listen | default(80) }} default_server;
    server_name _;
    return        444;

    access_log /var/log/nginx/{{ item.key }}_access.log;
    error_log /var/log/nginx/{{ item.key }}_error.log error;

}

{% else %}
upstream {{ item.key }}_backend  {
{% for upstream in item.value.upstreams %}
    server {{upstream.backend_address}}:{{upstream.backend_port}};
{% endfor %}
}

{% if item.value.extra_locations is defined %}
{% for extra_location in item.value.extra_locations %}
upstream {{ item.key }}_{{ extra_location }}_backend  {
{% for extra_upstream in item.value.extra_locations[extra_location].upstreams %}
   server {{ extra_upstream.backend_address }}:{{ extra_upstream.backend_port }};
{% endfor %}
}
{% endfor %}
{% endif %}

server {
   listen         {{ item.value.listen | default(80) }};
   listen    [::]:{{ item.value.listen | default(80) }};
   server_name    {{ item.value.domains | join(' ') }};

   location / {
{% for acl in item.value.acls | default({}) %}
{% if acl.mode == 'allow' or acl.mode == 'deny' %}
      {{ acl.mode | default('deny') }} {{ acl.value }};
{% endif %}
{% endfor %}
      gzip off;
      client_max_body_size {{ item.value.client_max_body_size | default('50M') }};
      proxy_read_timeout {{ item.value.proxy_read_timeout | default('300') }};
      proxy_set_header Upgrade $http_upgrade;
{% if item.value.conn_upgrade is not defined or item.value.conn_upgrade %}
      proxy_http_version 1.1;
      proxy_set_header Connection "upgrade";
{% endif %}
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Frame-Options SAMEORIGIN;
      proxy_pass http://{{ item.key }}_backend;
{% if item.value.auth is defined %}
      auth_basic "Restricted Content";
      auth_basic_user_file /etc/nginx/{{ item.key }}_htpasswd;
{% endif %}
   }

{% if item.value.extra_locations is defined %}
{% for extra_location in item.value.extra_locations %}
   location /{{ extra_location }} {
      gzip off;
      client_max_body_size {{ item.value.client_max_body_size | default('50M') }};
      proxy_read_timeout {{ item.value.proxy_read_timeout | default('300') }};
      proxy_pass http://{{ item.key }}_{{ extra_location }}_backend;
      proxy_http_version  1.1;
      proxy_set_header        Upgrade $http_upgrade;
{% if item.value.conn_upgrade is not defined or item.value.conn_upgrade %}
      proxy_set_header        Connection "upgrade";
{% endif %}
      proxy_set_header        Host $http_host;
      proxy_set_header        X-Real-IP $remote_addr;
   }

{% endfor %}
{% endif %}

   location /.well-known {
      alias /var/www/{{ item.key }}/.well-known;
   }

   access_log /var/log/nginx/{{ item.key }}_access.log;
   error_log /var/log/nginx/{{ item.key }}_error.log error;

}
{% endif %}
